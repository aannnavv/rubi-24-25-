# Метод для конвертації римських цифр у десяткові
def roman_to_integer(roman)
  # Хеш зі значеннями римських цифр
  roman_values = {
    'I' => 1,
    'V' => 5,
    'X' => 10,
    'L' => 50,
    'C' => 100,
    'D' => 500,
    'M' => 1000
  }

  # Змінні для збереження результату
  total = 0        # Накопичує кінцеве значення
  prev_value = 0   # Зберігає попереднє значення римської цифри

  # Обробляємо римські цифри з кінця до початку
  roman.reverse.each_char do |char|
    current_value = roman_values[char] # Отримуємо десяткове значення поточного символу

    if current_value < prev_value
      total -= current_value  # Якщо поточне менше попереднього, віднімаємо його
    else
      total += current_value  # Інакше додаємо до результату
    end

    prev_value = current_value # Оновлюємо попереднє значення
  end

  total # Повертаємо обчислене десяткове значення
end

# Головний блок програми
puts "Введіть римське число (наприклад: IX, XL, MCMXCIV):"
roman_input = gets.chomp.upcase # Отримуємо введення від користувача і переводимо у верхній регістр

# Перевіряємо, чи введено коректне римське число
if roman_input.match?(/^[IVXLCDM]+$/)
  # Якщо введення правильне, конвертуємо римське число у десяткове
  decimal_result = roman_to_integer(roman_input)
  puts "Десяткове значення римського числа #{roman_input} = #{decimal_result}"
else
  # Якщо введення некоректне, виводимо повідомлення про помилку
  puts "Помилка: введено некоректне римське число."
end
